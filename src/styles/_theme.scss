@use '~@angular/material' as mat;

@use 'sass:map';

@include mat.core();

// Define a light theme
$light-primary: mat.define-palette(mat.$indigo-palette);
$light-accent: mat.define-palette(mat.$pink-palette);
$light-theme: mat.define-light-theme(
  (
    color: (
      primary: $light-primary,
      accent: $light-accent,
    ),
  )
);

// Define a dark theme
$dark-primary: mat.define-palette(mat.$pink-palette);
$dark-accent: mat.define-palette(mat.$blue-gray-palette);
$dark-theme: mat.define-dark-theme(
  (
    color: (
      primary: $dark-primary,
      accent: $dark-accent,
    ),
  )
);

// Apply the dark theme by default
@include mat.core-theme($dark-theme);
@include mat.button-theme($dark-theme);
@include mat.card-theme($dark-theme);
@include mat.form-field-theme($dark-theme);
@include mat.input-theme($dark-theme);
@include mat.select-theme($dark-theme);
@include mat.slide-toggle-theme($dark-theme);
@include mat.toolbar-theme($dark-theme);

a:not(.mat-button-base) {
  color: mat.get-color-from-palette(map.get($dark-theme, foreground), text);
}

// Apply the light theme only when the `.my-light-theme` CSS class is applied
// to an ancestor element of the components (such as `body`).
.light-theme {
  @include mat.core-color($light-theme);
  @include mat.button-color($light-theme);
  @include mat.card-theme($light-theme);
  @include mat.form-field-theme($light-theme);
  @include mat.input-theme($light-theme);
  @include mat.select-theme($light-theme);
  @include mat.slide-toggle-theme($light-theme);
  @include mat.toolbar-theme($light-theme);

  a:not(.mat-button-base) {
    color: mat.get-color-from-palette(map.get($light-theme, foreground), text);
  }
}
